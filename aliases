alias dotfiles='cd ~/Projects/dotfiles'
alias eotb='cd ~/Projects/ragnarson/eotb'
alias eotbgem='cd ~/Projects/ragnarson/eotb_rails_plugin'

alias m='mate'
alias mop='mate .'
alias mup='find "$HOME/Library/Application Support/TextMate/Bundles" -name .git -execdir git pull --verbose \;'

alias g='git'
alias gs='git status'
alias ga='git add'
alias gaa='git add .'
alias grm="git status | grep deleted | awk '{print \$3}' | xargs git rm"
alias gc='git commit -v'
alias gca='git commit -av'
alias gcam='git commit --amend'
alias gst='git stash'
alias gstp='git stash pop'
alias gsta='git stash apply'
alias gstc='git stash clear'
alias gco='git checkout'
alias gb='git branch --color -a'
alias gbd='git branch -d'
alias gcl='git clone'
alias gpl='git pull'
alias gps='git push'
alias gpap="git pull && git push"
alias gdf='git diff'
alias gdfm='git diff | mate'
alias gdt='git difftool'
alias gm='git merge'
alias gmt='git mergetool'
alias glo='git log --pretty=oneline'

function gbra {
  branch_name=$1
  git push origin origin:refs/heads/${branch_name}
  git fetch origin
  git checkout --track -b ${branch_name} origin/${branch_name}
  git pull
}

function gbrd {
  branch_name=$1
  git branch -d ${branch_name}
  git push origin :heads/${branch_name}
}

alias sc='script/rails console'
alias ss='script/rails server'
alias sg='script/rails generate'
alias spec='spec -c'
alias rspec='rspec -c'

alias ..='cd ..'
alias l='ls'
alias ls='ls -Ga'
alias ll='ls -Galh'

alias mv='mv -fv'
alias cp='cp -Rfv'
alias rm='rm -Rfv'
alias ln='ln -v'
alias tar='tar -v'

alias clean="find . -depth -name '.DS_Store' -exec rm '{}' \; -print"

function proxy {
  if [ `networksetup -getwebproxy AirPort | head -n 1 | awk '{ print $2 }'` = 'Yes' ]; then
    networksetup -setwebproxystate AirPort off
    echo "Proxy is turned off now"
  else
    networksetup -setwebproxystate AirPort on
    echo "Proxy is turned on now"
  fi
}

function iwork {
  if [ -e /Library/Preferences/com.apple.iWork09.plist ]; then
    rm /Library/Preferences/com.apple.iWork09.plist
  fi
}
