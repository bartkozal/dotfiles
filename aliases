function m {
  if [ "$1" != "" ]; then
    mate $1
  else
    mate .
  fi
}

function d {
  cd "$MY_CODE/$1";
}

function st {
  terminitor start $1
}

alias g='git'
alias gs='git status -sb'
alias gb='git branch -av'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gst='git stash'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gm='git merge'
alias gms='git merge --squash'
alias grb='git rebase -i'
alias gcl='git clone'
alias gpl='git pull --rebase'
alias gps='git push'
alias gdf='git diff'
alias glo='git log --decorate --oneline -n 15'
alias gaa='git add .'
alias grm="git rm \$(git ls-files --deleted)"
alias gaar='gaa && grm'
alias gres='git checkout -f HEAD && git clean -df'

function gc {
  if [ "$1" != "" ]; then
    git commit -m $1
  else
    git commit -v
  fi
}

function gba {
  git checkout -b $1
  git push origin $1
  git branch --set-upstream $1 origin/$1
}

function gbrm {
  git push origin :$1
  git branch -D $1
}

function gbt {
  git checkout -t origin/$1
}

function gbfu {
  git remote add upstream $1
  git fetch upstream
}

alias rb='ruby'

alias r='rails'
alias rc='rails console'
alias rg='rails generate'
alias rdb='rails dbconsole'
alias rmg='rake db:migrate db:test:clone'

alias b='bundle'
alias be='bundle exec'

alias ..='cd ..'
alias ls='ls -Ga'
alias ll='ls -Galh'

alias mv='mv -v'
alias cp='cp -Rv'
alias rm='rm -Rv'
alias ln='ln -v'

function killapps {
  osascript -e '
    tell application "System Events" to set the visible of every process to true
    set white_list to {"Finder", "Terminal"}
    try
    tell application "Finder"
       set process_list to the name of every process whose visible is true
    end tell
    repeat with i from 1 to (number of items in process_list)
      set this_process to item i of the process_list
      if this_process is not in white_list then
        tell application this_process
          quit
        end tell
      end if
    end repeat
    on error
    tell the current application to display dialog "An error has occurred!" & return & "This script will now quit" buttons {"Quit"} default button 1 with icon 0
    end try'
}
